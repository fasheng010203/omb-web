<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.onemile.bms.mapper.admin.AdminRoleResourceMapper">
    <resultMap id="BaseResultMap" type="com.onemile.bms.entity.admin.AdminRoleResource">
        <id column="id" property="id" jdbcType="BIGINT"/>
        <result column="role_id" property="roleId" jdbcType="BIGINT"/>
        <result column="type" property="type" jdbcType="TINYINT"/>
        <result column="resource_id" property="resourceId" jdbcType="BIGINT"/>
        <result column="gmt_create" property="gmtCreate" jdbcType="TIMESTAMP"/>
        <result column="gmt_modified" property="gmtModified" jdbcType="TIMESTAMP"/>
    </resultMap>
    <sql id="Base_Column_List">
    id, role_id, type, resource_id, gmt_create, gmt_modified
  </sql>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long">
        select
        <include refid="Base_Column_List"/>
        from admin_role_resource
        where id = #{id,jdbcType=BIGINT}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from admin_role_resource
    where id = #{id,jdbcType=BIGINT}
  </delete>
    <insert id="insert" parameterType="com.onemile.bms.entity.admin.AdminRoleResource">
        insert into admin_role_resource ( role_id, type,
        resource_id, gmt_create, gmt_modified
        )
        values (#{id,jdbcType=BIGINT}, #{roleId,jdbcType=BIGINT}, #{type,jdbcType=TINYINT},
        #{resourceId,jdbcType=BIGINT}, #{gmtCreate,jdbcType=TIMESTAMP}, #{gmtModified,jdbcType=TIMESTAMP}
        );
        <selectKey resultType="long" keyProperty="id">
            SELECT LAST_INSERT_ID()
        </selectKey>
    </insert>
    <insert id="insertSelective" parameterType="com.onemile.bms.entity.admin.AdminRoleResource">
        insert into admin_role_resource
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="roleId != null">
                role_id,
            </if>
            <if test="type != null">
                type,
            </if>
            <if test="resourceId != null">
                resource_id,
            </if>
            <if test="gmtCreate != null">
                gmt_create,
            </if>
            <if test="gmtModified != null">
                gmt_modified,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=BIGINT},
            </if>
            <if test="roleId != null">
                #{roleId,jdbcType=BIGINT},
            </if>
            <if test="type != null">
                #{type,jdbcType=TINYINT},
            </if>
            <if test="resourceId != null">
                #{resourceId,jdbcType=BIGINT},
            </if>
            <if test="gmtCreate != null">
                #{gmtCreate,jdbcType=TIMESTAMP},
            </if>
            <if test="gmtModified != null">
                #{gmtModified,jdbcType=TIMESTAMP},
            </if>
        </trim>

        <selectKey resultType="long" keyProperty="id">
            SELECT LAST_INSERT_ID()
        </selectKey>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.onemile.bms.entity.admin.AdminRoleResource">
        update admin_role_resource
        <set>
            <if test="roleId != null">
                role_id = #{roleId,jdbcType=BIGINT},
            </if>
            <if test="type != null">
                type = #{type,jdbcType=TINYINT},
            </if>
            <if test="resourceId != null">
                resource_id = #{resourceId,jdbcType=BIGINT},
            </if>
            <if test="gmtCreate != null">
                gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
            </if>
            <if test="gmtModified != null">
                gmt_modified = #{gmtModified,jdbcType=TIMESTAMP},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.onemile.bms.entity.admin.AdminRoleResource">
    update admin_role_resource
    set role_id = #{roleId,jdbcType=BIGINT},
      type = #{type,jdbcType=TINYINT},
      resource_id = #{resourceId,jdbcType=BIGINT},
      gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
      gmt_modified = #{gmtModified,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>


    <!-- 以上是工具自动生成 -->

    <!-- 查询角色分配资源时的菜单资源list -->
    <select id="selectAdminRoleResource" resultType="com.onemile.bms.pojo.vo.admin.AdminRoleRescVO">
     select
        a.id id,
        a.CODE code,
        a.NAME name,
        a.layer layer,
        a.type type,
        a.pid pid,
        case when b.id is null then '0' else '1' END as checked
        from admin_resource a
        left join admin_role_resource b on a.id = b.resource_id and
        b.role_id= #{roleId}
        where a.type= 1

   </select>

    <!-- 查询角色分配资源时的菜单资源list -->
    <select id="selectAdminRoleResourceByPids" resultType="com.onemile.bms.pojo.vo.admin.AdminRoleRescVO">
        select
        a.id id,
        a.CODE code,
        a.NAME name,
        a.layer layer,
        a.type type,
        a.pid pid,
        case when b.id is null then '' else 'true' END as checked
        from admin_resource a
        left join admin_role_resource b on a.id = b.resource_id and
        b.role_id= #{roleId}
        where a.type= 2 and a.pid in
        <foreach item="item" index="index" collection="pids" open="("
                 separator="," close=")">
            #{item}
        </foreach>
        order by a.order_no ,a.gmt_create asc
    </select>

    <delete id="deleteByRoleId" parameterType="Long">
        delete  from  admin_role_resource where role_id=#{roleId}
    </delete>

    <insert id="batchInsert" parameterType="list">
        insert into admin_role_resource (role_id, type,
        resource_id, gmt_create, gmt_modified
        )
        values
        <foreach collection="list" item="item" index="index" separator=",">
            (#{item.roleId} ,#{item.type} ,#{item.resourceId} ,#{item.gmtCreate},#{item.gmtModified} )
        </foreach>
    </insert>

    <delete id="batchDelete" parameterType="list">
        delete  from  admin_role_resource
        where resource_id in
        <foreach item="item" index="index" collection="resIdList" open="("
                 separator="," close=")">
            #{item}
        </foreach>
    </delete>

</mapper>